import streamlit as st
import sys, os
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'src')))
from application_musicale.viz import genre_popularity, plot_most_popular_artists_by_top_genres, plot_duration_vs_popularity, plot_energy_by_genre, plot_energy_vs_popularity_by_genre
from application_musicale.data_loader import load_data

def main():
    st.set_page_config(page_title="Application Musicale", page_icon="üéµ", layout="wide")

    # En-t√™te avec un fond personnalis√©
    st.markdown(""" 
        <style>
        .header {
            background-color: #4CAF50;
            padding: 40px;
            border-radius: 8px;
            text-align: center;
            color: white;
            width: 100%;
        }
        .intro {
            font-size: 1.4em;
            color: #ffefdb;
            text-align: center;
            margin: 20px 0;
        }
        .footer {
            font-size: 0.9em;
            text-align: center;
            color: #888;
            margin-top: 50px;
        }
        </style>
    """, unsafe_allow_html=True)

    st.markdown('<div class="header"><h1>Bienvenue dans l\'Application Musicale üé∂</h1></div>', unsafe_allow_html=True)
    st.markdown('<div class="intro">D√©couvrez les tendances musicales et maximisez vos ventes gr√¢ce √† l\'analyse des donn√©es.</div>', unsafe_allow_html=True)

    if "dashboard" in st.session_state and st.session_state.dashboard:
        show_dashboard()
    else:
        st.markdown('<div class="intro">Cliquez ci-dessous pour acc√©der au dashboard.</div>', unsafe_allow_html=True)
        if st.button("Voir le dashboard"):
            st.session_state.dashboard = True
            st.experimental_rerun()

    st.markdown('<div class="footer">¬© 2025 - Projet universitaire</div>', unsafe_allow_html=True)

def show_dashboard():
    df = load_data("C:/Users/Jihed B/Application_Musicale/spotify_tracks.csv")  

    if df is not None:
        st.markdown('<h2 style="text-align:center;">Dashboard</h2>', unsafe_allow_html=True)

        # 1. Popularit√© par genre
        st.subheader("Popularit√© par genre")
        st.pyplot(genre_popularity(df))
        st.markdown("""
            <p style="color: #f4f4f4;">Cette visualisation montre que le pop-film, k-pop, chill sont les genres les plus populaires.</p>
        """, unsafe_allow_html=True)

        # 2. Top 20 artistes les plus populaires
        st.subheader("Top 20 artistes les plus populaires")
        st.pyplot(plot_most_popular_artists_by_top_genres(df))
        st.markdown("""
            <p style="color: #f4f4f4;">Ce graphique pr√©sente les 20 artistes les plus populaires bas√©s sur la moyenne de la popularit√© de leurs morceaux.
            Les artistes les plus populaires peuvent servir de r√©f√©rences pour des collaborations ou des recommandations marketing.</p>
        """, unsafe_allow_html=True)

        # 3. Dur√©e vs Popularit√©
        st.subheader("Dur√©e vs Popularit√©")
        st.pyplot(plot_duration_vs_popularity(df))
        st.markdown("""
            <p style="color: #f4f4f4;">Cette analyse explore la relation entre la dur√©e des morceaux et leur popularit√©.
            On peut ainsi observer si les morceaux plus courts sont plus tendance aupr√®s des auditeurs.</p>
        """, unsafe_allow_html=True)

        # 4. √ânergie moyenne par genre
        st.subheader("√ânergie moyenne par genre")
        st.pyplot(plot_energy_by_genre(df))
        st.markdown("""
            <p style="color: #f4f4f4;">Ce graphique affiche l'√©nergie moyenne des morceaux selon les genres.
            Les genres avec une forte √©nergie sont generalement associ√©s √† des ambiances plus dynamiques.</p>
        """, unsafe_allow_html=True)

        # 5. √ânergie vs Popularit√© par Genre
        st.subheader("√ânergie vs Popularit√© par Genre")
        st.pyplot(plot_energy_vs_popularity_by_genre(df))
        st.markdown("""
            <p style="color: #f4f4f4;">Cette visualisation montre la corr√©lation entre l'√©nergie des morceaux et leur popularit√©.
            Il y'a une corr√©lation positive faible qui sugg√®re que les morceaux plus √©nergiques sont pr√©f√©r√©s par le public.</p>
        """, unsafe_allow_html=True)

        
    else:
        st.error("Les donn√©es n'ont pas pu √™tre charg√©es. Veuillez v√©rifier le chemin du fichier.")

if __name__ == "__main__":
    if "dashboard" not in st.session_state:
        st.session_state.dashboard = False
    main()
